{% extends 'base.html.twig' %}

{% block title %}Admin - Recipe List{% endblock %}

{% block stylesheets %}
{{ parent() }}
<link rel="stylesheet" href="{{ asset('/styles/admin.css') }}">
</style>
{% endblock %}
{% block body %}
<div class="admin-dashboard-layout">
    <div id="sidenavAccordion">
        {% include 'back/admin/sidenav.html.twig' %}
    </div>
    <div class="container mt-4">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                <h1 class="h3 mb-0">Admin - Recipe List</h1>
               
            </div>
            <div class="card-body">
                <div class="row mb-4">
                    <div class="col-md-6">
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fas fa-search"></i>
                            </span>
                            <input type="text" id="recipeSearch" class="form-control" placeholder="Search recipes...">
                        </div>
                    </div>
                </div>

                <!-- Filter Controls -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header bg-light">
                                <h5 class="mb-0">Filters</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label for="ingredientFilter">Number of Ingredients</label>
                                            <select id="ingredientFilter" class="form-control">
                                                <option value="all">All</option>
                                                <option value="1-3">1-3 ingredients</option>
                                                <option value="4-6">4-6 ingredients</option>
                                                <option value="7-9">7-9 ingredients</option>
                                                <option value="10+">10+ ingredients</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label for="timesUsedFilter">Times Used</label>
                                            <select id="timesUsedFilter" class="form-control">
                                                <option value="all">All</option>
                                                <option value="0">Never used</option>
                                                <option value="1-5">1-5 times</option>
                                                <option value="6-10">6-10 times</option>
                                                <option value="11+">11+ times</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label for="favoriteFilter">Favorite Status</label>
                                            <select id="favoriteFilter" class="form-control">
                                                <option value="all">All</option>
                                                <option value="favorite">Favorites only</option>
                                                <option value="not-favorite">Not favorites</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label for="userFilter">User</label>
                                            <select id="userFilter" class="form-control">
                                                <option value="all">All Users</option>
                                                {% for user in users|default([]) %}
                                                    <option value="{{ user.id }}">{{ user.email }}</option>
                                                {% endfor %}
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="row mt-2">
                                    <div class="col-md-12 text-right">
                                        <button id="resetFilters" class="btn btn-secondary">
                                            <i class="fas fa-undo"></i> Reset Filters
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    {% for recipe in recipes %}
                        <div class="col-md-4 mb-4 recipe-card" 
                             data-ingredients="{{ recipe.foods|length }}" 
                             data-times-used="{{ recipe.timesUsed|default(0) }}"
                             data-favorite="{{ recipe.isFavoris ? 'true' : 'false' }}"
                             data-user="{{ recipe.user ? recipe.user.id : '' }}">
                            <div class="card h-100">
                                <div class="card-header bg-light">
                                    <h5 class="card-title mb-0">{{ recipe.name }}</h5>
                                </div>
                                <div class="card-body">
                                    <p class="card-text">
                                        <strong>User:</strong> {{ recipe.user ? recipe.user.email : 'No user' }}<br>
                                        <strong>Ingredients:</strong> {{ recipe.foods|length }}<br>
                                        <strong>Times Used:</strong> {{ recipe.timesUsed|default(0) }}<br>
                                        <strong>Favorite:</strong> 
                                        {% if recipe.isFavoris %}
                                            <span class="badge bg-success">Yes</span>
                                        {% else %}
                                            <span class="badge bg-secondary">No</span>
                                        {% endif %}
                                    </p>
                                </div>
                                <div class="card-footer bg-light">
                                    <div class="btn-group w-100">
                                        <a href="{{ path('app_admin_recipe_show', {'id': recipe.id}) }}" class="btn btn-sm btn-info">
                                            <i class="fas fa-eye"></i> View
                                        </a>
                                        <a href="{{ path('app_admin_recipe_edit', {'id': recipe.id}) }}" class="btn btn-sm btn-warning">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <form method="post" action="{{ path('app_admin_recipe_delete', {'id': recipe.id}) }}" style="display: inline-block;">
                                            <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ recipe.id) }}">
                                            <button class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this recipe?')">
                                                <i class="fas fa-trash"></i> Delete
                                            </button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    {% else %}
                        <div class="col-12">
                            <div class="alert alert-info text-center">
                                No recipes found. Create your first recipe!
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('recipeSearch');
            const recipeCards = document.querySelectorAll('.recipe-card');
            const ingredientFilter = document.getElementById('ingredientFilter');
            const timesUsedFilter = document.getElementById('timesUsedFilter');
            const favoriteFilter = document.getElementById('favoriteFilter');
            const userFilter = document.getElementById('userFilter');
            const resetFiltersBtn = document.getElementById('resetFilters');
            
            // Function to apply all filters
            function applyFilters() {
                const searchText = searchInput.value.toLowerCase();
                const ingredientValue = ingredientFilter.value;
                const timesUsedValue = timesUsedFilter.value;
                const favoriteValue = favoriteFilter.value;
                const userValue = userFilter.value;
                
                let visibleCount = 0;
                
                recipeCards.forEach(function(card) {
                    const cardText = card.textContent.toLowerCase();
                    const ingredients = parseInt(card.dataset.ingredients);
                    const timesUsed = parseInt(card.dataset.timesUsed);
                    const isFavorite = card.dataset.favorite === 'true';
                    const userId = card.dataset.user;
                    
                    // Check if card matches search text
                    const matchesSearch = cardText.indexOf(searchText) > -1;
                    
                    // Check if card matches ingredient filter
                    let matchesIngredients = true;
                    if (ingredientValue !== 'all') {
                        if (ingredientValue === '1-3' && (ingredients < 1 || ingredients > 3)) {
                            matchesIngredients = false;
                        } else if (ingredientValue === '4-6' && (ingredients < 4 || ingredients > 6)) {
                            matchesIngredients = false;
                        } else if (ingredientValue === '7-9' && (ingredients < 7 || ingredients > 9)) {
                            matchesIngredients = false;
                        } else if (ingredientValue === '10+' && ingredients < 10) {
                            matchesIngredients = false;
                        }
                    }
                    
                    // Check if card matches times used filter
                    let matchesTimesUsed = true;
                    if (timesUsedValue !== 'all') {
                        if (timesUsedValue === '0' && timesUsed !== 0) {
                            matchesTimesUsed = false;
                        } else if (timesUsedValue === '1-5' && (timesUsed < 1 || timesUsed > 5)) {
                            matchesTimesUsed = false;
                        } else if (timesUsedValue === '6-10' && (timesUsed < 6 || timesUsed > 10)) {
                            matchesTimesUsed = false;
                        } else if (timesUsedValue === '11+' && timesUsed < 11) {
                            matchesTimesUsed = false;
                        }
                    }
                    
                    // Check if card matches favorite filter
                    let matchesFavorite = true;
                    if (favoriteValue !== 'all') {
                        if (favoriteValue === 'favorite' && !isFavorite) {
                            matchesFavorite = false;
                        } else if (favoriteValue === 'not-favorite' && isFavorite) {
                            matchesFavorite = false;
                        }
                    }
                    
                    // Check if card matches user filter
                    let matchesUser = true;
                    if (userValue !== 'all' && userValue !== userId) {
                        matchesUser = false;
                    }
                    
                    // Show or hide card based on all filters
                    if (matchesSearch && matchesIngredients && matchesTimesUsed && matchesFavorite && matchesUser) {
                        card.style.display = 'block';
                        visibleCount++;
                    } else {
                        card.style.display = 'none';
                    }
                });
                
                // Show message if no recipes match filters
                const noResultsMsg = document.getElementById('noResultsMessage');
                if (visibleCount === 0) {
                    if (!noResultsMsg) {
                        const message = document.createElement('div');
                        message.id = 'noResultsMessage';
                        message.className = 'col-12 alert alert-warning text-center';
                        message.innerHTML = 'No recipes match the current filters.';
                        document.querySelector('.row').appendChild(message);
                    }
                } else if (noResultsMsg) {
                    noResultsMsg.remove();
                }
            }
            
            // Event listeners for filters
            searchInput.addEventListener('input', applyFilters);
            ingredientFilter.addEventListener('change', applyFilters);
            timesUsedFilter.addEventListener('change', applyFilters);
            favoriteFilter.addEventListener('change', applyFilters);
            userFilter.addEventListener('change', applyFilters);
            
            // Reset filters
            resetFiltersBtn.addEventListener('click', function() {
                searchInput.value = '';
                ingredientFilter.value = 'all';
                timesUsedFilter.value = 'all';
                favoriteFilter.value = 'all';
                userFilter.value = 'all';
                applyFilters();
            });
        });
    </script>
</div>
{% endblock %} 