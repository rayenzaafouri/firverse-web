{% extends 'base.html.twig' %}

{% block title %}Participations{% endblock %}

{% block body %}
{% include 'navbar.html.twig' %}
<div class="container participation-container">
    <h2 class="text-center text-success">All Participations</h2>
<link rel="stylesheet" href="{{ asset('css/navbar.css') }}">

    <button id="showStatsBtn" class="btn btn-sm btn-success" style="margin: 15px 0;">
        <i class="fas fa-chart-pie"></i> Show Stats
    </button>

    <div class="participation-form-container">
        <div class="table-responsive">
            <table class="table table-dark table-hover">
                <thead>
                    <tr>
                        <th class="text-success">ID</th>
                        <th class="text-success">Email</th>
                        <th class="text-success">Phone</th>
                        <th class="text-success">Gender</th>
                        <th class="text-success">Birth Date</th>
                        <th class="text-success">Type</th>
                        <th class="text-success">Participants</th>
                        <th class="text-success">Terms</th>
                  </tr>
                </thead>
                <tbody>
                {% for participation in participations %}
                    <tr>
                        <td>{{ participation.participationID }}</td>
                        <td>{{ participation.email }}</td>
                        <td>{{ participation.phoneNumber }}</td>
                        <td>{{ participation.gender }}</td>
                        <td>{{ participation.dateOfBirth ? participation.dateOfBirth|date('Y-m-d') : '' }}</td>
                        <td>{{ participation.participantType }}</td>
                        <td>{{ participation.numberOfParticipants }}</td>
                        <td>
                            <span class="badge {{ participation.termsAccepted ? 'bg-success' : 'bg-danger' }}">
                                {{ participation.termsAccepted ? 'Yes' : 'No' }}
                            </span>
                        </td>
                
                    </tr>

                {% else %}
                    <tr>
                        <td colspan="9" class="text-center py-4">
                            <div class="alert alert-dark">
                                No participations found
                            </div>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
        
            <div id="genderChart" style="width: 100%; height: 400px; margin-top: 40px;"></div>
<div id="typeChart" style="width: 100%; height: 400px; margin-top: 40px;"></div>
<!-- Ajouter cette section sous les graphiques -->
<div class="total-participants-container" style="margin-top: 20px;">
    <p><strong>Total Participants:</strong> <span id="totalParticipantsCount">0</span></p>
</div>
<div class="export-buttons" style="margin-top: 20px; text-align: center;">
    <button id="exportExcelBtn" class="btn btn-sm btn-primary">
        <i class="fas fa-file-excel"></i> Export to Excel
    </button>
    <button id="exportPdfBtn" class="btn btn-sm btn-danger">
        <i class="fas fa-file-pdf"></i> Export to PDF
    </button>
    <button id="printBtn" class="btn btn-sm btn-success">
        <i class="fas fa-print"></i> Print
    </button>
</div>

    </div>
</div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>

    <script>
        google.charts.load('current', {'packages': ['corechart']});
        google.charts.setOnLoadCallback(drawGenderChart);
        google.charts.setOnLoadCallback(drawTypeChart);

        function drawTypeChart() {
            const rows = document.querySelectorAll('tbody tr');
            const typeCounts = {};
            let totalParticipants = 0;

            rows.forEach(row => {
                const type = row.children[5]?.textContent.trim();
                const numberOfParticipants = parseInt(row.children[6]?.textContent.trim()) || 0;
                if (type) typeCounts[type] = (typeCounts[type] || 0) + 1;
                totalParticipants += numberOfParticipants;
            });

            document.getElementById('totalParticipantsCount').textContent = totalParticipants;

            const dataArray = [['Type', 'Count']];
            for (const [type, count] of Object.entries(typeCounts)) {
                dataArray.push([type, count]);
            }
            if (dataArray.length <= 1) return;

            const data = google.visualization.arrayToDataTable(dataArray);

            const options = {
                title: 'Participant Type Distribution (%)',
                backgroundColor: '#1e1e1e',
                titleTextStyle: { color: '#e0e0e0', fontSize: 18 },
                pieHole: 0.4,
                pieSliceText: 'percentage',
                legend: { position: 'right', textStyle: { color: '#e0e0e0' } },
                chartArea: { width: '80%', height: '80%' },
                animation: {
                    startup: true,
                    duration: 1500,
                    easing: 'out',
                }
            };

            const chart = new google.visualization.PieChart(document.getElementById('typeChart'));
            chart.draw(data, options);
        }

        function drawGenderChart() {
            const rows = document.querySelectorAll('tbody tr');
            let male = 0, female = 0, other = 0, totalParticipants = 0;

            rows.forEach(row => {
                const gender = row.children[3]?.textContent.trim().toLowerCase();
                const numberOfParticipants = parseInt(row.children[6]?.textContent.trim()) || 0;
                totalParticipants += numberOfParticipants;

                if (gender === 'male') male++;
                else if (gender === 'female') female++;
                else if (gender) other++;
            });

            const total = male + female + other;
            if (total === 0) return;

            document.getElementById('totalParticipantsCount').textContent = totalParticipants;

            const data = google.visualization.arrayToDataTable([
                ['Gender', 'Count'],
                ['Male', male],
                ['Female', female],
                ['Other', other]
            ]);

            const options = {
                title: 'Gender Distribution (%)',
                backgroundColor: '#1e1e1e',
                titleTextStyle: { color: '#e0e0e0', fontSize: 18 },
                pieHole: 0.3,
                pieSliceText: 'percentage',
                legend: { position: 'right', textStyle: { color: '#e0e0e0' } },
                slices: {
                    0: { color: '#44c4ff' },
                    1: { color: '#ff4473' },
                    2: { color: '#cccccc' }
                }
            };

            const chart = new google.visualization.PieChart(document.getElementById('genderChart'));
            chart.draw(data, options);
        }

        // Gestion des boutons après chargement complet du DOM
        document.addEventListener("DOMContentLoaded", function () {
            // Export Excel
            document.getElementById("exportExcelBtn")?.addEventListener("click", function () {
                const table = document.querySelector('table');
                if (table) {
                    const wb = XLSX.utils.table_to_book(table, { sheet: 'Participations' });
                    XLSX.writeFile(wb, 'participations.xlsx');
                }
            });

            // Export PDF
         document.getElementById("exportPdfBtn")?.addEventListener("click", function () {
    const { jsPDF } = window.jspdf;
    const doc = new jsPDF();

    const table = document.querySelector('table');
    if (!table) return;

    // Titre
    doc.setFontSize(18);
    doc.text("Liste des Participations", 105, 15, { align: 'center' });

    // Date d'export
    const date = new Date().toLocaleDateString();
    doc.setFontSize(10);
    doc.text(`Date : ${date}`, 200, 10, { align: 'right' });

    // Extraire les en-têtes
    const headers = [];
    const headerCells = table.querySelectorAll('thead th');
    headerCells.forEach(cell => headers.push(cell.innerText.trim()));

    // Extraire les données
    const data = [];
    const rows = table.querySelectorAll('tbody tr');
    rows.forEach(row => {
        const rowData = [];
        const cells = row.querySelectorAll('td');
        cells.forEach(cell => rowData.push(cell.innerText.trim()));
        data.push(rowData);
    });

    // AutoTable avec pagination
    doc.autoTable({
        head: [headers],
        body: data,
        startY: 25,
        styles: {
            fontSize: 10,
            cellPadding: 3
        },
        headStyles: {
            fillColor: [52, 152, 219], // Bleu
            textColor: 255,
            halign: 'center'
        },
        bodyStyles: {
            halign: 'left'
        },
        alternateRowStyles: {
            fillColor: [240, 240, 240]
        },
        margin: { top: 25 },
    didDrawPage: function (data) {
    const pageSize = doc.internal.pageSize;
    const pageHeight = pageSize.height || pageSize.getHeight();
    const pageWidth = pageSize.width || pageSize.getWidth();
    const pageNumber = doc.internal.getNumberOfPages();
    doc.setTextColor(150); // Gris clair
doc.setFont('helvetica', 'italic');

    doc.setFontSize(10);
    doc.text(`Page ${pageNumber}`, pageWidth - 20, pageHeight - 10);
    doc.text('Generated by Fitverse', 10, pageHeight - 10); // Pied de page
}

    });

    // Sauvegarde
    doc.save('participations.pdf');
});


            // Impression
            document.getElementById("printBtn")?.addEventListener("click", function () {
                window.print();
            });

          // Affichage/masquage des graphiques et défilement vers le bas
document.getElementById("showStatsBtn")?.addEventListener("click", function () {
    const charts = document.querySelectorAll("#genderChart, #typeChart");
    let anyVisible = false;

    charts.forEach(chart => {
        if (chart.style.display === "none") {
            chart.style.display = "block";
            anyVisible = true;
        } else {
            chart.style.display = "none";
        }
    });

    // Si au moins un graphique est devenu visible, faire défiler vers le bas
    if (anyVisible) {
        setTimeout(() => {
            document.getElementById("genderChart").scrollIntoView({ behavior: 'smooth' });
        }, 300); // Petit délai pour s'assurer de l'affichage
    }
});


            // Masquer les graphiques au départ
            document.getElementById("genderChart").style.display = "none";
            document.getElementById("typeChart").style.display = "none";
        });
    </script>

{% endblock %}


{% block stylesheets %}
{{ parent() }}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.6.9/dist/sweetalert2.min.css">
<style>
    html {
        scroll-behavior: smooth;
    }
   
    #genderChart {
        background-color: #1e1e1e;
        padding: 20px;
        border-radius: 8px;
    }
    .participation-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 30px;
        border-radius: 8px;
        background-color: #1e1e1e;
        color: #e0e0e0;
    }

    .table-dark {
        background-color: #121212;
        color: #e0e0e0;
        border-radius: 8px;
        overflow: hidden;
    }

    .table-dark th, .table-dark td {
        border-color: #444;
        vertical-align: middle;
    }

    .table-dark.table-hover tbody tr:hover {
        background-color: rgba(59, 107, 25, 0.1);
    }

    .btn-group .btn {
        transition: all 0.3s ease;
    }

    .btn-group .btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .badge {
        padding: 5px 10px;
        border-radius: 50px;
        font-size: 0.85em;
        font-weight: 500;
    }

    @media (max-width: 768px) {
        .participation-container {
            padding: 20px;
        }

        .table-responsive {
            overflow-x: auto;
        }

        .table th, .table td {
            padding: 8px 10px;
            font-size: 0.9em;
        }

        .btn-group {
            flex-direction: column;
            gap: 3px;
        }
    }
</style>
{% endblock %}
