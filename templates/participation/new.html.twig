<!DOCTYPE html>
<html>
<head>
    <title>Register for Event</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        /* Modern design for participation form */
        body {
            font-family: Arial, sans-serif;
            background-color: rgb(255, 255, 255);
            margin: 0;
            padding: 0;
        }

        .participation-container {
            max-width: 800px;
            margin: 30px auto;
            padding: 30px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 8px 15px rgba(70, 181, 42, 0.1);
            text-align: center;
        }

        .back-button {
            text-align: left;
            margin-left: -350px;
            margin-top: 20px;
        }

        h2 {
            font-size: 2em;
            font-weight: bold;
            color: green;
            margin-bottom: 15px;
        }

        .event-date {
            color: green;
            margin-bottom: 30px;
        }

        .participation-form-container {
            text-align: left;
            font-size: 1.1em;
            color: #444;
        }

        .participation-form-container form {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .form-group {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        label {
            font-weight: 600;
            color: #333;
            margin-right: 10px;
            flex: 1;
        }

        .form-control {
            flex: 2;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1em;
        }

        .form-check {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 20px;
        }

        .form-check-input {
            width: 20px;
            height: 20px;
            margin: 0;
        }

        .form-check-label {
            font-weight: normal;
            margin-bottom: 0;
        }

        .btn-submit {
            padding: 12px 20px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 25px;
            font-size: 1.1em;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-top: 10px;
        }

        .btn-submit:hover {
            background-color: #218838;
        }

        .form-group .icon {
            margin-right: 10px;
            color: #28a745;
            font-size: 1.5em;
        }

        @media (max-width: 768px) {
            .participation-container {
                padding: 20px;
                margin: 15px;
            }

            h2 {
                font-size: 1.6em;
            }

        }
    </style>
</head>
<body>
    <div class="participation-container">
        <div class="back-button">
            <a href="{{ path('events_home') }}" class="btn btn-primary">‚Üê Back to Events</a>
        </div>
        <!-- Ajoute un attribut data-date et data-price -->
<h2 id="event-title" data-date="{{ event.date|date('Y-m-d') }}" data-price="{{ event.price }}">
  Register for: {{ event.name }}
</h2>
        <p class="event-date">Event date: {{ event.date|date('Y-m-d') }}</p>


        <div class="participation-form-container">
            <form id="participation-form">
                <!-- Email -->
                <div class="form-group">
                    <i class="icon bi bi-envelope"></i>
                    <label for="email" class="form-label">Email</label>
                    <input type="email" id="email" class="form-control" required>
                </div>

                <!-- Phone Number -->
                <div class="form-group">
                    <i class="icon bi bi-phone"></i>
                    <label for="phoneNumber" class="form-label">Phone Number</label>
                    <input type="text" id="phoneNumber" class="form-control" required>
                </div>
                 <!-- Gender -->
            <div class="form-group">
                <i class="icon bi bi-gender-ambiguous"></i>
                {{ form_label(form.gender, null, {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.gender, {'attr': {'class': 'form-control' ~ (form.gender.vars.errors|length ? ' is-invalid' : '')}}) }}
             
            </div>

            <!-- Date of Birth -->
            <div class="form-group">
                <i class="icon bi bi-calendar"></i>
                {{ form_label(form.dateOfBirth, null, {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.dateOfBirth, {'attr': {'class': 'form-control' ~ (form.dateOfBirth.vars.errors|length ? ' is-invalid' : '')}}) }}
             
            </div>
                <!-- Participant Type -->
                <div class="form-group">
                    <i class="icon bi bi-person-check"></i>
                    <label for="participantType" class="form-label">Participant Type</label>
                    <select id="participantType" class="form-control">
                        <option value="student">Student</option>
                        <option value="professional">Professional</option>
                        <option value="guest">Guest</option>
                    </select>
                </div>

                <!-- Number of Participants -->
                <div class="form-group">
                    <i class="icon bi bi-person-plus"></i>
                    <label for="numberOfParticipants" class="form-label">Number of Participants</label>
                    <input type="number" id="numberOfParticipants" class="form-control" required>
                </div>

                <!-- Terms Accepted -->
                <div class="form-group form-check">
                    <input type="checkbox" id="termsAccepted" class="form-check-input" required>
                    <label for="termsAccepted" class="form-check-label">I accept the terms and conditions</label>
                </div>

                <button type="submit" class="btn-submit" id="register-button">Register</button>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/qrcode@1.4.4/build/qrcode.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/qrcode/build/qrcode.min.js"></script>


   <script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('participation-form');

    form.addEventListener('submit', function(event) {
        event.preventDefault();

        const eventTitle = document.getElementById('event-title');
        const eventDate = eventTitle.dataset.date;
        const pricePerPerson = parseFloat(eventTitle.dataset.price);

        const email = document.getElementById('email').value.trim();
        const phoneNumber = document.getElementById('phoneNumber').value.trim();
        const participantType = document.getElementById('participantType').value;
        const numberOfParticipants = parseInt(document.getElementById('numberOfParticipants').value);

        if (!email || !phoneNumber || !participantType || numberOfParticipants <= 0) {
            Swal.fire({
                title: 'Erreur',
                text: 'Veuillez remplir correctement tous les champs.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
            return;
        }

        let discountRate = 0;
        if (participantType === 'student') discountRate = 0.07;
        else if (participantType === 'professional') discountRate = 0.05;
        else if (participantType === 'guest') discountRate = 0.02;

        const originalTotal = pricePerPerson * numberOfParticipants;
        const discountAmount = originalTotal * discountRate;
        const finalTotal = originalTotal - discountAmount;

        Swal.fire({
            title: 'Participation en cours ! ‚úÖ',
            html: `
            <p><strong>üìÖ Date de l'√©v√©nement :</strong> ${eventDate}</p>
        <p><strong>üí∞ Montant initial :</strong> ${originalTotal.toFixed(2)} D.T</p>
        <p><strong>üîª Remise :</strong> -${discountAmount.toFixed(2)} D.T</p>
        <p><strong>‚úÖ Total √† payer :</strong> <span style="color:green">${finalTotal.toFixed(2)} D.T</span></p>
    `,
            icon: 'info',
            confirmButtonText: 'Continuer ‚û°Ô∏è',
            confirmButtonColor: '#3085d6'
        }).then((result) => {
            if (result.isConfirmed) {
               Swal.fire({
    title: 'D√©tails de paiement',
   html: `
<form id="payment-form" onsubmit="return false;" style="font-family: 'Segoe UI', sans-serif; max-width: 400px; margin: 0 auto; padding: 20px; border-radius: 16px; box-shadow: 0 4px 10px rgba(0,0,0,0.1); background-color: #fff;">
    <h2 style="text-align: center; color:rgb(30, 75, 119);">üí≥ Paiement</h2>
<label for="card-type" style="font-size: 1.1em; color: rgb(16, 16, 16); margin-bottom: 10px; text-align: center; display: block;">üåç Type de carte :</label>
<select id="card-type" class="swal2-input" style="width: 100%; padding: 10px; border-radius: 8px; margin-bottom: 15px; border: 1px solid #ddd; background-color: #f9f9f9; display: block; margin-left: auto; margin-right: auto;">
    <option value="">-- S√©lectionner --</option>
    <option value="Visa">Visa üè¶</option>
    <option value="MasterCard">MasterCard üí≥</option>
    <option value="AmericanExpress">American Express üèôÔ∏è</option>
</select>

<label for="card-number" style="font-size: 1.1em; color: rgb(16, 16, 16); margin-bottom: 10px; text-align: center; display: block;">üî¢ Num√©ro de carte :</label>
<input type="text" id="card-number" class="swal2-input" placeholder="Num√©ro de carte" style="width: 100%; padding: 10px; border-radius: 8px; margin-bottom: 15px; border: 1px solid #ddd; background-color: #f9f9f9; display: block; margin-left: auto; margin-right: auto;">
<div style="display: flex; justify-content: space-between; margin-bottom: 15px; width: 100%; align-items: center;">
    <div style="width: 48%; text-align: left;">
        <label for="expiration-date" style="font-size: 1.1em; color: rgb(16, 16, 16); margin-bottom: 10px;">üìÖ Expiration :</label>
        <input type="text" id="expiration-date" class="swal2-input" placeholder="MM/AA" style="width: 100%; padding: 10px; border-radius: 8px; border: 1px solid #ddd; background-color: #f9f9f9;">
    </div>
    <div style="width: 48%; text-align: left;">
        <label for="cvv" style="font-size: 1.1em; color: rgb(16, 16, 16); margin-bottom: 5px;">üîí CVV :</label>
        <input type="text" id="cvv" class="swal2-input" placeholder="CVV" style="width: 100%; padding: 10px; border-radius: 8px; border: 1px solid #ddd; background-color: #f9f9f9;">
    </div>
</div>

<div style="text-align: center; margin-top: 20px;">
    </div>
</form>
`,
    icon: 'question',
    showCancelButton: true,
    cancelButtonText: '‚ùå Annuler',
    confirmButtonText: '‚úÖ Terminer le paiement',
    confirmButtonColor: '#28a745',
    customClass: {
        cancelButton: 'swal2-cancel swal2-styled',
        confirmButton: 'swal2-confirm swal2-styled'
    },
    preConfirm: () => {
        const cardType = document.getElementById('card-type').value;
        const cardNumber = document.getElementById('card-number').value.trim();
        const expirationDate = document.getElementById('expiration-date').value.trim();
        const cvv = document.getElementById('cvv').value.trim();

        if (!cardType || !cardNumber || !expirationDate || !cvv) {
            Swal.showValidationMessage('Veuillez remplir tous les champs de paiement.');
            return false;
        }
  // Num√©ro de carte : 16 chiffres
    if (!/^\d{16}$/.test(cardNumber)) {
        Swal.showValidationMessage('Le num√©ro de carte doit comporter exactement 16 chiffres.');
        return false;
    }

    // CVV : 3 chiffres
    if (!/^\d{3}$/.test(cvv)) {
        Swal.showValidationMessage('Le CVV doit comporter exactement 3 chiffres.');
        return false;
    }

    // Expiration : format MM/AA et date non expir√©e
    if (!/^\d{2}\/\d{2}$/.test(expirationDate)) {
        Swal.showValidationMessage('La date d\'expiration doit √™tre au format MM/AA.');
        return false;
    }

    const [month, year] = expirationDate.split('/').map(Number);
    if (month < 1 || month > 12) {
        Swal.showValidationMessage('Le mois d\'expiration est invalide.');
        return false;
    }

    const expiration = new Date(`20${year}`, month - 1, 1);
    const now = new Date();
    now.setDate(1); // Comparaison √† d√©but de mois

    if (expiration < now) {
        Swal.showValidationMessage('La carte est expir√©e.');
        return false;
    }
        return { cardType, cardNumber, expirationDate, cvv };
    }
}).then((paymentResult) => {
    if (paymentResult.isConfirmed) {
         const { cardType, cardNumber, expirationDate, cvv } = result.value;

        // Simulate payment processing
        Swal.fire({
            title: 'Traitement du paiement...',
            text: 'Veuillez patienter.',
            allowOutsideClick: false,
            didOpen: () => {
                Swal.showLoading();
            }
        });

        // Simulate a delay for payment processing
        setTimeout(() => {
            Swal.close();
        }, 2000);
        // Simulate payment success
        Swal.fire({
            title: 'Paiement confirm√© ‚úÖ',
            text: 'Votre r√©servation a √©t√© enregistr√©e avec succ√®s.',
            icon: 'success',
            confirmButtonText: 'G√©n√©rer le ticket'
            
        }).then(() => {
            const ticketInfo = `Participation ID: ${Date.now()}\nEmail: ${email}\nNombre de participants: ${numberOfParticipants}\nTotal: ${finalTotal.toFixed(2)} ÿØ.ÿ™\nDate: ${eventDate}`;
            
            QRCode.toDataURL(ticketInfo, function (err, url) {
                if (err) {
                    console.error(err);
                    Swal.fire('Erreur', 'Impossible de g√©n√©rer le QR code.', 'error');
                    return;
                }

         Swal.fire({
  title: ' ü•≥ Voici votre ticket de participation ü•≥ ',
html: `
<div style="font-family: 'Segoe UI', sans-serif; max-width: 600px; margin: 0 auto; border: 2px solid #ddd; border-radius: 16px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); background:rgb(7, 84, 0); background-size: cover; background-position: center; padding: 20px;">
  <h2 style="color:rgb(16, 16, 16); text-align: center; font-size: 1.5em; margin-bottom: 20px;">üéüÔ∏è Ticket de Participation üéâ</h2>
  <hr style="border: none; border-top: 1px solid #eee; margin-bottom: 20px;">
  
  <div style="display: flex; justify-content: space-between; margin-bottom: 20px;">
    <div style="flex: 1; rgb(16, 16, 16); font-size: 1.1em;">
      <p><strong>üÜî ID :</strong> <span id="ticket-id"></span></p>
      <p><strong>üìß Email :</strong> <span id="ticket-email"></span></p>
      <p><strong>üë• Nombre de participants :</strong> <span id="ticket-count"></span></p>
      <p><strong>üí∞ Prix Total:</strong> <span id="ticket-total"></span></p>
      <p><strong>üìÖ Date de l'event :</strong> <span id="ticket-date"></span></p>
    </div>
    
    <div style="flex: 1; text-align: right;">
      <img id="ticket-qr" src="" alt="QR Code" style="width: 120px; height: 120px; border: 1px solid #ccc; border-radius: 8px; box-shadow: 2px 2px 10px rgba(0,0,0,0.2);">
    </div>
  </div>

  <hr style="border: none; border-top: 1px solid #eee; margin: 20px 0;">

  <p style="text-align: center; color:rgb(16, 16, 16); font-size: 1em;">Merci pour votre confiance üôè. Pr√©sentez ce ticket √† l'entr√©e de l'√©v√©nement üö™.</p>
</div>
`,
  didOpen: () => {
  const ticketID = Date.now();

  document.getElementById('ticket-id').textContent = ticketID;
  document.getElementById('ticket-email').textContent = email;
  document.getElementById('ticket-count').textContent = numberOfParticipants;
  document.getElementById('ticket-total').textContent = `${finalTotal.toFixed(2)} D.T`;
  document.getElementById('ticket-date').textContent = eventDate;

  const qrContent = `Participation ID: ${ticketID}\nEmail: ${email}\nNombre de participants: ${numberOfParticipants}\nTotal: ${finalTotal.toFixed(2)} ÿØ.ÿ™\nDate: ${eventDate}`;

  QRCode.toDataURL(qrContent).then((qrUrl) => {
    document.getElementById('ticket-qr').src = qrUrl;

    // Cr√©er le bouton imprimer
    const printBtn = document.createElement('button');
    printBtn.textContent = 'üñ®Ô∏è Imprimer le billet';
    printBtn.style.marginTop = '20px';
    printBtn.className = 'swal2-confirm swal2-styled';

    printBtn.onclick = async () => {
      const { jsPDF } = window.jspdf;
      const doc = new jsPDF();

      const pageWidth = doc.internal.pageSize.getWidth();

      // Styles globaux
      doc.setTextColor(0, 0, 0);
      doc.setFont('helvetica', 'bold');
      doc.setFontSize(18);
      doc.setDrawColor(0, 128, 0);
        doc.setFillColor(255, 255, 255);
     const img = new Image();
    img.src = '/fitverse-white.png';

    img.onload = () => {
      // Logo
      doc.addImage(img, 'PNG', (pageWidth - 50) / 2, 10, 50, 20);

  // Titre
doc.setFontSize(20);
doc.setTextColor(0, 128, 0); // Vert
doc.text(' Billet de Participation', pageWidth / 2, 40, { align: 'center' });

// Infos
doc.setFontSize(12);
let y = 55;

doc.setTextColor(60); // Gris fonc√©
doc.text(` ID de participation : ${ticketID}`, pageWidth / 2, y, { align: 'center' });

y += 10;
doc.setTextColor(0, 102, 204); // Bleu
doc.text(` Email : ${email}`, pageWidth / 2, y, { align: 'center' });

y += 10;
doc.setTextColor(60);
doc.text(` Nombre de participants : ${numberOfParticipants}`, pageWidth / 2, y, { align: 'center' });

y += 10;
doc.setTextColor(0, 128, 0); // Vert
doc.text(` Montant total : ${finalTotal.toFixed(2)} D.T`, pageWidth / 2, y, { align: 'center' });

y += 10;
doc.setTextColor(60);
doc.text(` Date de l'√©v√©nement : ${eventDate}`, pageWidth / 2, y, { align: 'center' });

// QR Code
y += 15;
doc.setDrawColor(0, 128, 0); // Bordure verte
doc.rect((pageWidth - 52) / 2, y - 2, 52, 52); // Encadrer le QR
doc.addImage(qrUrl, 'PNG', (pageWidth - 50) / 2, y, 50, 50);

// Message final
y += 60;
doc.setFont('helvetica', 'italic');
doc.setTextColor(0, 128, 0);
doc.text('Veuillez pr√©senter ce ticket au staff √† l‚Äôentr√©e.', pageWidth / 2, y, { align: 'center' });

y += 10;
doc.setFont('helvetica', 'normal');
doc.setTextColor(0, 102, 204);
doc.text(' pour plus informations ', pageWidth / 2,y, { align: 'center' });
y += 10;
doc.textWithLink(' fitverse@esprit.com', pageWidth / 2, y, { align: 'center', url: 'mailto:fitverse@esprit.com' });

y += 8;
doc.textWithLink(' +21650761099', pageWidth / 2, y, { align: 'center', url: 'https://wa.me/21650761099' });

// Sauvegarder
// Sauvegarde + Impression
      doc.save(`ticket_${ticketID}.pdf`);
      doc.autoPrint();
      doc.output('dataurlnewwindow');
    };
};
    document.querySelector('.swal2-html-container').appendChild(printBtn);
  });
}

}).then(() => {
    form.submit(); // ‚ûï Ajout ici pour r√©activer le comportement pr√©c√©dent
});
            });
        });
    }
});
            }
        });
    });
});                         
</script>